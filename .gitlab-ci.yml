image: docker:19.03.13
services:
  - docker:19.03.13-dind

stages:
  - test
  - build
  - release
  - deploy

variables:
  CONTAINER_CLIENT_IMAGE: ${CI_REGISTRY_IMAGE}/client:latest
  CONTAINER_SERVER_IMAGE: ${CI_REGISTRY_IMAGE}/server:latest
  CONTAINER_CLIENT_RELEASE_IMAGE: ${CI_REGISTRY_IMAGE}/client:${CI_COMMIT_TAG}
  CONTAINER_SERVER_RELEASE_IMAGE: ${CI_REGISTRY_IMAGE}/server:${CI_COMMIT_TAG}

before_script:
  - docker info
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

test:
  stage: test
  script:
    - echo "Test ok!"
#  only:
#    - merge_requests
#    - tags

build_client:
  stage: build
  script:
    - docker build --pull -t $CONTAINER_CLIENT_IMAGE ./client
    - docker push $CONTAINER_CLIENT_IMAGE
  only:
    - tags

build_server:
  stage: build
  script:
    - docker build --pull -t $CONTAINER_SERVER_IMAGE ./server
    - docker push $CONTAINER_SERVER_IMAGE
  only:
    - tags

release_client:
  stage: release
  script:
    - docker pull $CONTAINER_CLIENT_IMAGE
    - docker tag $CONTAINER_CLIENT_IMAGE $CONTAINER_CLIENT_RELEASE_IMAGE
    - docker push $CONTAINER_CLIENT_RELEASE_IMAGE
  only:
    - tags

release_server:
  stage: release
  script:
    - docker pull $CONTAINER_SERVER_IMAGE
    - docker tag $CONTAINER_SERVER_IMAGE $CONTAINER_SERVER_RELEASE_IMAGE
    - docker push $CONTAINER_SERVER_RELEASE_IMAGE
  only:
    - tags

deploy:
  stage: deploy
  script:
    - echo "Deploy application!"
  when: manual