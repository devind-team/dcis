name: Build

on:
  push:
    branches:
      - 670-запуск-тестов-на-сервере
    tags:
      - 'v*'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  test_server:
    name: Test server
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: server
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: dcis
          POSTGRES_PASSWORD: 1234
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Copy
        run: ls -al
#      - name: Install Python
#        uses: actions/setup-python@v4
#        with:
#          python-version: '3.10'
#          check-latest: true
#      - name: Setup Poetry
#        uses: Gr1N/setup-poetry@v7
#      - name: Install dependencies
#        run: poetry install
#      - name: Run tests
#        run: |
#          cp .env.example
#          poetry run python manage.py test

  build_server:
    name: Build server
    runs-on: ubuntu-latest
    needs: test_server
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v3
      - name: Run
        run: echo 'Hi'
#      - name: Log in to the Cntainer registry
#        uses: docker/login-action@v2
#        with:
#          registry: ${{ env.REGISTRY }}
#          username: ${{ github.actor }}
#          password: ${{ secrets.GITHUB_TOKEN }}
#      - name: Extra metadata (tags, labels)
#        id: meta
#        uses: docker/metadata-action@v4
#        with:
#          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/dcis-server
#      - name: Build and push Docker image
#        uses: docker/build-push-action@v3
#        with:
#          context: ./server
#          push: true
#          tags: ${{ steps.meta.outputs.tags }}
#          labels: ${{ steps.meta.outputs.labels }}

#  build_client:
#    name: Build client
#    runs-on: ubuntu-latest
#    permissions:
#      contents: read
#      packages: write
#    steps:
#      - uses: actions/checkout@v3
#      - name: Log in to the Cntainer registry
#        uses: docker/login-action@v2
#        with:
#          registry: ${{ env.REGISTRY }}
#          username: ${{ github.actor }}
#          password: ${{ secrets.GITHUB_TOKEN }}
#      - name: Extra metadata (tags, labels)
#        id: meta
#        uses: docker/metadata-action@v4
#        with:
#          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/dcis-client
#      - name: Build and push Docker image
#        uses: docker/build-push-action@v3
#        with:
#          context: ./client
#          push: true
#          tags: ${{ steps.meta.outputs.tags }}
#          labels: ${{ steps.meta.outputs.labels }}
