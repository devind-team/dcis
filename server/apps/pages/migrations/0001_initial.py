# Generated by Django 3.2.12 on 2022-02-16 07:36

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models

import devind_helpers.resolve_model


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('avatar', models.FileField(default=None, help_text='Аватар', null=True, upload_to='storage/pages/avatars/')),
                ('text', models.CharField(help_text='Текст', max_length=1023)),
                ('position', models.PositiveIntegerField(default=0, help_text='Позиция вывода')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Дата обновления')),
                ('parent', models.ForeignKey(help_text='Родительская категория', null=True, on_delete=django.db.models.deletion.CASCADE, to='pages.category')),
                ('user', models.ForeignKey(help_text='Пользователь, создавший категорию', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('position',),
            },
            bases=(models.Model, devind_helpers.resolve_model.ResolveModel),
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Название языка', max_length=100)),
                ('code', models.CharField(help_text='Код языка', max_length=25)),
            ],
        ),
        migrations.CreateModel(
            name='Page',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Заголовок', max_length=1023)),
                ('avatar', models.FileField(help_text='Аватар', null=True, upload_to='storage/pages/')),
                ('parallax', models.BooleanField(default=False, help_text='Показывать параллакс или нет')),
                ('views', models.PositiveIntegerField(default=0, help_text='Количество просмотров')),
                ('signature', models.CharField(help_text='Подпись страницы', max_length=100, null=True)),
                ('hide', models.BooleanField(default=False, help_text='Скрываем ли страницу')),
                ('priority', models.BooleanField(default=False, help_text='Приоритет')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Дата обновления')),
                ('category', models.ForeignKey(help_text='Категория', on_delete=django.db.models.deletion.CASCADE, to='pages.category')),
            ],
            options={
                'ordering': ('-priority', '-created_at'),
            },
            bases=(models.Model, devind_helpers.resolve_model.ResolveModel),
        ),
        migrations.CreateModel(
            name='PageKind',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Название', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Segment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Заголовок страницы', max_length=255, null=True)),
                ('align', models.PositiveIntegerField(choices=[(0, 'Left'), (1, 'Center'), (2, 'Right')], default=0, help_text='Выравнивание заголовка')),
                ('view', models.PositiveIntegerField(choices=[(0, 'empty'), (1, 'card')], help_text='Тип элемента для рендера', null=True)),
                ('position', models.PositiveIntegerField(default=0, help_text='Позиция в сортировке')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Дата обновления')),
            ],
            options={
                'ordering': ('position',),
            },
        ),
        migrations.CreateModel(
            name='Translation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField(help_text='Идентификатор модели')),
                ('field', models.CharField(help_text='Переводимое поле модели', max_length=100)),
                ('content', models.TextField(help_text='Переведенный контент')),
                ('content_type', models.ForeignKey(help_text='Переводимая модель', on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('language', models.ForeignKey(help_text='Локаль', on_delete=django.db.models.deletion.CASCADE, to='pages.language')),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Название', max_length=256)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Дата создания')),
                ('user', models.ForeignKey(help_text='Пользователь, создавший тег', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-created_at',),
            },
            bases=(models.Model, devind_helpers.resolve_model.ResolveModel),
        ),
        migrations.CreateModel(
            name='SegmentElement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('view', models.PositiveIntegerField(choices=[(0, 'empty'), (1, 'card')], help_text='Тип элемента для рендера', null=True)),
                ('represent', models.PositiveIntegerField(choices=[(0, 'grid'), (1, 'card'), (2, 'list'), (3, 'slider')], help_text='Представление', null=True)),
                ('columns', models.PositiveIntegerField(default=1, help_text='Колонок в элементе')),
                ('width', models.PositiveIntegerField(default=12, help_text='Ширина колонки')),
                ('page_size', models.PositiveIntegerField(default=12, help_text='Количество страниц в запросе')),
                ('position', models.PositiveIntegerField(default=0, help_text='Позиция в сортировке')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Дата обновления')),
                ('page_kind', models.ForeignKey(help_text='Тип привязанной страницы', on_delete=django.db.models.deletion.CASCADE, to='pages.pagekind')),
                ('segment', models.ForeignKey(help_text='Сегмент страницы', on_delete=django.db.models.deletion.CASCADE, to='pages.segment')),
                ('user', models.ForeignKey(help_text='Пользователь', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('position',),
            },
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(default='', help_text='Текст')),
                ('kind', models.PositiveIntegerField(choices=[(0, 'text'), (1, 'gallery'), (2, 'files'), (3, 'profiles'), (4, 'sliders'), (5, 'form'), (6, 'jupyter'), (7, 'dataset')], default=0, help_text='Тип')),
                ('payload', models.JSONField(help_text='Конструкции', null=True)),
                ('position', models.PositiveIntegerField(default=0, help_text='Позиция')),
                ('page', models.ForeignKey(help_text='Страница, на которой находится секция', on_delete=django.db.models.deletion.CASCADE, to='pages.page')),
                ('user', models.ForeignKey(help_text='Пользователь, создавший секцию', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('position',),
            },
            bases=(models.Model, devind_helpers.resolve_model.ResolveModel),
        ),
        migrations.AddField(
            model_name='page',
            name='kind',
            field=models.ForeignKey(help_text='Тип', null=True, on_delete=django.db.models.deletion.SET_NULL, to='pages.pagekind'),
        ),
        migrations.AddField(
            model_name='page',
            name='tags',
            field=models.ManyToManyField(help_text='Теги на странице', to='pages.Tag'),
        ),
        migrations.AddField(
            model_name='page',
            name='user',
            field=models.ForeignKey(help_text='Пользователь', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(help_text='Текст', max_length=1023)),
                ('rating', models.IntegerField(default=0, help_text='Рейтинг')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Дата обновления')),
                ('page', models.ForeignKey(help_text='Страница, на которой был оставлен комментарий', on_delete=django.db.models.deletion.CASCADE, to='pages.page')),
                ('parent', models.ForeignKey(help_text='Родительский комментарий в дереве', null=True, on_delete=django.db.models.deletion.CASCADE, to='pages.comment')),
                ('user', models.ForeignKey(help_text='Пользователь, оставивший комментарий', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
