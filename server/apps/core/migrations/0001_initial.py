# Generated by Django 3.2.12 on 2022-02-16 07:36

from django.db import migrations, models

import devind_core.managers.user_manager


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(help_text='login', max_length=30, unique=True)),
                ('email', models.EmailField(help_text='email', max_length=254, unique=True)),
                ('first_name', models.CharField(help_text='Имя', max_length=30)),
                ('last_name', models.CharField(help_text='Фамилия', max_length=30)),
                ('sir_name', models.CharField(help_text='Отчество', max_length=30, null=True)),
                ('is_active', models.BooleanField(default=True, help_text='Является ли пользователь активным')),
                ('avatar', models.FileField(default=None, help_text='Аватар', null=True, upload_to='storage/avatars/')),
                ('birthday', models.DateField(help_text='День рождения', null=True)),
                ('agreement', models.DateTimeField(help_text='Пользовательское соглашение', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Дата добавления')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'users',
                'ordering': ('-created_at',),
                'permissions': [('view_experimental', 'Can view experimental features')],
                'abstract': False,
            },
            managers=[
                ('objects', devind_core.managers.user_manager.UserManager()),
            ],
        ),
    ]
